# This is a Databricks asset bundle definition for databricks-dab-examples.
# See https://docs.databricks.com/dev-tools/bundles/index.html for documentation.
bundle:
  name: Dab Demo Project

include:
  - resources/*.yml

variables:
  catalog:
    default: "catalog1"
  database:
    default: "schema1"
  flights_test_schema:
    default: "schema1_validation"
  spark_version:
    default: "15.3.x-scala2.12"
  node_type_id:
    default: "Standard_D4ds_v5"
  shared_cluster_config:
    type: "complex"
    default:
      spark_version: ${var.spark_version}
      node_type_id: ${var.node_type_id}
      data_security_mode: USER_ISOLATION
      autoscale:
          min_workers: 1
          max_workers: 2

targets:
  # The 'dev' target, used for development purposes.
  # Whenever a developer deploys using 'dev', they get their own copy.
  dev:
    # We use 'mode: development' to make sure everything deployed to this target gets a prefix
    # like '[dev my_user_name]'. Setting this mode also disables any schedules and
    # automatic triggers for jobs and enables the 'development' mode for Delta Live Tables pipelines.
    mode: development
    default: true
    workspace:
      host: https://adb-984752964297111.11.azuredatabricks.net/



  prod:
    # For test/staging deployments, we only have a single copy, so we should deploy as 
    # the same user (Service Principal) ever time.
    mode: production
    workspace:
      root_path: /Users/${workspace.current_user.userName}/.bundle/${bundle.name}/${bundle.target}
    run_as:
      user_name: ${workspace.current_user.userName}
    variables:
      database: flights_${bundle.target}
      flights_test_schema: flights_validation_${bundle.target}

  dr:
    # For test/staging deployments, we only have a single copy, so we should deploy as
    # the same user (Service Principal) ever time.
    mode: production
    workspace:
      root_path: /Users/${workspace.current_user.userName}/.bundle/${bundle.name}/${bundle.target}
    run_as:
      user_name: ${workspace.current_user.userName}
    variables:
      database: flights_${bundle.target}
      flights_test_schema: flights_validation_${bundle.target}


